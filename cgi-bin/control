#!@PERL@

use strict;
use warnings;

use lib '@CGIBINDIR@';
use civs_common;
use CGI qw(:standard);
use Digest::MD5 qw(md5_hex);
use DB_File;
use Socket;
use IO::Handle;
use mail;

my $thisurl = $civs_bin_path."/control@PERLEXT@";

HTML_Header("CIVS Poll Control");
use election 1.02;

my $control_key = param('key');    
my $authorization_key = param('akey');

CIVS_Header("Poll control");

CheckElectionID;
CheckControlKey($control_key);
CheckAuthorizationKeyForAddingVoter($authorization_key);

print h1("$title");
  
if (!IsStarted) {
    print "<form method=\"POST\"
		action=\"$civs_bin_path/start_election@PERLEXT@\"
		enctype=\"multipart/form-data\"
		name=\"Start\">", $cr;
    print '<p>The poll has not yet started. Press this button to start it: ';
    print hidden('id', $election_id);
    print hidden('key', $control_key);
    print hidden('akey', $authorization_key)
		if defined($authorization_key);
    print '<input type="submit" value="Start poll" name="start">';
    print '</p></form>';
} elsif (!IsStopped) {
    print "<form method=\"POST\"
		action=\"$civs_bin_path/close@PERLEXT@\"
		enctype=\"multipart/form-data\"
		name=\"Close\">", $cr;
    print '<p>The poll is in progress. Press this button to end it: ';
    print hidden('id', $election_id);
    print hidden('key', $control_key);
    print '<input type="submit" value="End poll" name="close"
            onclick="confirm(\'Ending a poll is an operation that cannot be undone. Continue?\')">', $cr;
    print '</p></form>', $cr;

    if ($writeins eq 'yes') {
		if (param('allow_voting')) {
		    $edata{'allow_voting'} = $allow_voting = 'yes';
		    $voting_enabled = 1;
		}
		if (param('nowriteins')) {
		    $edata{'writeins'} = $writeins = 'no';
		    print p('Write-in choices have been disabled');
		} else {
		    print "<form method=\"POST\"
				action=\"$civs_bin_path/control@PERLEXT@\"
				enctype=\"multipart/form-data\"
				name=\"Nowriteins\">", $cr;
		    print p('Write-in choices are currently allowed.',
			    hidden('id', $election_id),
			    hidden('key', $control_key),
			'<input type="submit" value="Disallow further write-ins" name="nowriteins">');
		    if ($allow_voting ne 'yes') {
			print p('Voting is currently disabled during the write-in phase.',
			    hidden('id', $election_id),
			    hidden('key', $control_key),
			'<input type="submit" value="Allow voting during write-in phase" name="allow_voting">');
		    }
		    print hidden('akey', $authorization_key)
			    if defined($authorization_key);
		    print "</form>", $cr;
		}
    }
    if ($public eq 'yes') {
		my $url = "http://$thishost$civs_bin_path/vote@PERLEXT@?id=$election_id";
		$url .= "&akey=$authorization_key" 
			if defined($authorization_key);
		print p("This is a public poll. You may share the following link
                 with voters to allow them to vote."),
              p("<tt><a href=\"$url\">$url</a></tt>").$cr;
    }

} else {    
	&CloseDatabase;
    my $results_link;
    if ($restrict_results eq 'yes') {
	$results_link = "";
    } else {
	$results_link = "<a href=\"$civs_bin_path/results@PERLEXT@?id=$election_id\">Poll results</a> are available.";
    }
    print p("The poll has ended.", $results_link);
}

print "Poll supervisor: $name (<tt>$email_addr</tt>)", br(), $cr;
my $num_auth_string;
if (IsStarted or $num_auth) {
	$num_auth_string = "$num_auth"
} else {
	my $waiting = $#addresses + 1;
	$num_auth_string = "0 ($waiting voters will be authorized when the poll is started)";
}
print "Total authorized voters: $num_auth_string", br(), $cr unless $public eq 'yes';

$num_votes += 0;
if ($restrict_results eq 'yes') {
    if (IsStopped) {
	print 'Poll results are now available to the following users,',
	      ' who were earlier sent an email containing a URL for',
	      ' viewing results:<br>',$cr;
    } else {
	print 'Poll results will be available to the following users:', $cr;
    }
    my @result_addrs = split /(\r\n)+/, $result_addrs;
    print '<ul>';
    foreach my $addr (@result_addrs) {
	$addr = TrimAddr($addr);
	if (CheckAddr($addr)) {
	    print '<li>', $addr, $cr;
	}
    }
    print '</ul>';
} else {
    if (!IsStopped) {
	print p('Poll results available to all voters when poll completes.');
    }
}
print "Actual votes cast so far: $num_votes", br(), $cr;
print "Poll ends $election_end.", br(), $cr;

if ($writeins eq 'yes') {
    print 'Write-in choices are allowed.', br(), $cr;
    if (!$voting_enabled) {
	print 'Voting is disabled during write-ins.', br(), $cr;
    }
} else {
    print 'Write-in choices are not allowed.', br(), $cr;
}

if ($no_opinion eq 'yes') {
    print 'Voters can choose "No opinion".', br(), $cr;
}

if ($proportional eq 'yes') {
    if ($use_combined_ratings) {
	print 'This poll uses the proportional representation
	    algorithm with the combined-ratings voter criterion.',br(), $cr;
    } else {
	print 'This poll uses the proportional representation
	    algorithm with the best-candidate voter criterion.',br(), $cr;
    }
    if ($num_choices == 1) {
	print p('Proportional representation is enabled
	    but there is only a single winner. Therefore, proportional
	    representation mode will have no effect.'), $cr;
    }
}

if ($ballot_reporting eq 'yes') {
    print 'Detailed ballot reporting is enabled.', br(), $cr;
    if ($reveal_voters eq 'yes') {
	print 'Voter identities (email) will be publicly associated with their ballots.';
    } else {
	print 'Voter identities (email) will be kept anonymous.';
    }
} else {
    print 'Detailed ballot reporting is disabled.', br(), $cr;
}
 
print $cr, h2('Description:'), p($description);
print $cr, h2("Candidates");
my $wintxt;
if ($num_winners == 1) {
    $wintxt = "candidate";
} else {
    $wintxt = "$num_winners candidates";
}
print p("The top $wintxt will win.");
print "<ul>";
for (my $j = 0; $j < $num_choices; $j++) {
    print li($choices[$j]);
}
print "</ul>";

if ($external_ballots ne 'yes') {
    print $cr, h2("Add voters");

    print p("Enter e-mail addresses of voters, one per line. These
    may be new voters or existing voters who have not voted yet.
    In a private poll, giving the e-mail address of an already 
    existing voter " .b("will not") . " let that voter vote twice.
    It will only resend the voter an invitation to vote.
    In a public poll, only a token attempt is made to prevent
    multiple voting.");
    print "<form method=\"POST\"
		action=\"$civs_bin_path/add_voters@PERLEXT@\"
		enctype=\"multipart/form-data\"
		name=\"AddVoters\">", $cr;
    print hidden('id', $election_id);
    print hidden('key', $control_key);
    print hidden('akey', $authorization_key)
	    if defined($authorization_key);
    print p('<textarea rows="2" name="new_addresses" cols="50"></textarea>');
    print p('Upload file: <input id=new_addresses_file type=file name="new_addresses_file">');
    print '<input type="submit" value="Add voters" name="add">';
    print '</form>';
} else {
    print $cr, h2("Load ballot data");

    print "<form method=\"POST\"
               action=\"$civs_bin_path/upload_ballots@PERLEXT@\"
	       enctype=\"multipart/form-data\"
	       name=\"LoadBallots\">$cr";
    print hidden('id', $election_id);
    print hidden('key', $control_key);
    print hidden('akey', $authorization_key)
	    if defined($authorization_key);

    print 'File to upload ballots from:',
	input({type=>'file', name=>'ballot_data'}), $cr;
    print input({type=>'submit', value=>'Load ballots', name=>'load_ballots'});

    print p({class=>'explanation'}, small('The file should be formatted with one ballot per line. Each
      line contains the ranks of the N choices, which are numbers from 1
      to N, or a dash (<kbd>-</kbd>) to represent no opinion. Ranks should be
      separated by whitespace or a comma. Lines may be terminated
      with LF or CR/LF. Whitespace is ignored; lines whose first
      non-whitespace character is # are also ignored. A line may begin
      with <i>m</i><kbd>X</kbd> where <i>m</i> is a number, which
      signifies <i>m</i> identical ballots described by the rest of
      the line.')), $cr,
      p('Examples of ballots:'),
      pre(
'1,4,3,2,5        <i>A simple ballot ranking five choices.</i>
5 - 2 - 3        <i>Another ranking of five choices. Dashes indicate unranked choices.</i>
8X1 4 3 2 5      <i>Eight ballots like the first example ballot.</i>'
      );
}

print end_html();

exit 0;
